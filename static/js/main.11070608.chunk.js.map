{"version":3,"sources":["Header/Header.js","CreateAccount/CreateAccount.js","ListAccounts/ListAccounts.js","helpers/helpers.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","history","useHistory","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","onClick","push","textField","margin","button","CreateAccount","useState","firstName","setFirstName","middleName","setMiddleName","lastName","setLastName","phoneNumber","setPhoneNumber","email","setEmail","dateOfBirth","setDateOfBirth","pin","setPin","confirmPin","setConfirmPin","isSubmitClicked","setIsSubmitClicked","useEffect","axios","post","then","response","console","log","data","alert","id","catch","error","TextField","type","autoFocus","label","placeholder","value","onChange","event","target","ListAccounts","useAxios","loading","Box","sx","display","CircularProgress","message","name","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","row","repeat","toString","length","balance","CheckBox","checked","isVerified","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11070608.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport {useHistory} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nconst Header = () => {\n\n    const history = useHistory();\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <AccountBalanceIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Money Transfer App\n                    </Typography>\n                    <Button color=\"inherit\" onClick={() => history.push('/')}>\n                        Create an Account\n                    </Button>\n                    <Button color=\"inherit\" onClick={() => history.push('/admin/listAccounts')}>\n                        List Accounts\n                    </Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nexport default Header;\n","import React, {useState, useEffect} from 'react';\n//import TextField from '@material-ui/core/TextField';\n//import Button from '@material-ui/core/Button';\n\n// preferred approach\nimport {TextField, Button} from '@material-ui/core';\n\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport axios from 'axios';\n\nconst useStyles = makeStyles(() => ({\n    textField: {\n        margin: 20\n    },\n    button: {\n        margin: 25\n    }\n}));\n\nconst CreateAccount = () => {\n\n    const classes = useStyles();\n\n    const [firstName, setFirstName] = useState('');\n    const [middleName, setMiddleName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [email, setEmail] = useState('');\n    const [dateOfBirth, setDateOfBirth] = useState('01/01/1990');\n    const [pin, setPin] = useState();\n    const [confirmPin, setConfirmPin] = useState();\n\n    const [isSubmitClicked, setIsSubmitClicked] = useState(false);\n\n    useEffect(() => {\n\n        if (isSubmitClicked === true) {\n            if (pin === confirmPin) {\n                // axios.post(\"http://localhost:8080/api/account/create\",\n                axios.post(\"https://money-transfer-api-actse.herokuapp.com/api/account/create\",\n                    {\n                        \"firstName\": firstName,\n                        \"middleName\": middleName,\n                        \"lastName\": lastName,\n                        \"phoneNumber\": phoneNumber,\n                        \"email\": email,\n                        \"pin\": pin,\n                        \"dateOfBirth\": dateOfBirth\n                    }\n                )\n                    .then((response) => {\n                            console.log(response.data);\n                            alert(\"Account is created with id: \" + response.data.id);\n                        }\n                    )\n                    .catch((error) => {\n                        console.log(error);\n                        //alert(error.error);\n                    })\n                setIsSubmitClicked(false);\n            } else {\n                alert(\"Pin and confirmed pin are not the same!\");\n                setIsSubmitClicked(false);\n            }\n        }\n    }, [firstName, middleName, lastName, phoneNumber, email, pin, confirmPin, dateOfBirth, isSubmitClicked]);\n\n    return (\n        <form>\n            <TextField\n                type={\"text\"}\n                autoFocus={true}\n                className={classes.textField}\n                label={\"First Name\"}\n                placeholder={\"First Name\"}\n                variant={\"outlined\"}\n                value={firstName}\n                onChange={(event) =>\n                    setFirstName(event.target.value)}\n            />\n\n            <TextField\n                type={\"text\"}\n                className={classes.textField}\n                label={\"Middle Name\"}\n                placeholder={\"Middle Name\"}\n                variant={\"outlined\"}\n                value={middleName}\n                onChange={(event) =>\n                    setMiddleName(event.target.value)}\n            />\n\n            <TextField\n                type={\"text\"}\n                className={classes.textField}\n                label={\"Last Name\"}\n                placeholder={\"Last Name\"}\n                variant={\"outlined\"}\n                value={lastName}\n                onChange={(event) =>\n                    setLastName(event.target.value)}\n            />\n\n            <TextField\n                type={\"tel\"}\n                className={classes.textField}\n                label={\"Phone Number\"}\n                placeholder={\"Phone Number\"}\n                variant={\"outlined\"}\n                value={phoneNumber}\n                onChange={(event) =>\n                    setPhoneNumber(event.target.value)}\n            />\n\n            <TextField\n                type={\"email\"}\n                className={classes.textField}\n                label={\"Email\"}\n                placeholder={\"Email\"}\n                variant={\"outlined\"}\n                value={email}\n                onChange={(event) =>\n                    setEmail(event.target.value)}\n            />\n\n            <TextField\n                type={\"date\"}\n                className={classes.textField}\n                //label={\"Date of Birth\"}\n                placeholder={\"Date of Birth\"}\n                variant={\"outlined\"}\n                value={dateOfBirth}\n                onChange={(event) =>\n                    setDateOfBirth(event.target.value)}\n            />\n\n            <TextField\n                type={\"number\"}\n                className={classes.textField}\n                label={\"Pin\"}\n                placeholder={\"Pin\"}\n                variant={\"outlined\"}\n                value={pin}\n                onChange={(event) =>\n                    setPin(event.target.value)}\n            />\n\n            <TextField\n                type={\"number\"}\n                className={classes.textField}\n                label={\"Confirm Pin\"}\n                placeholder={\"Confirm Pin\"}\n                variant={\"outlined\"}\n                value={confirmPin}\n                onChange={(event) =>\n                    setConfirmPin(event.target.value)}\n            />\n\n            <Button\n                className={classes.button}\n                variant={\"contained\"}\n                color={\"Primary\"}\n                onClick={() => setIsSubmitClicked(true)}\n            >\n                Create Account\n            </Button>\n        </form>\n    );\n}\n\nexport default CreateAccount;\n","import React from \"react\"\nimport {\n    Paper,\n    TableContainer,\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell,\n    Box,\n    CircularProgress,\n} from \"@material-ui/core\"\nimport useAxios from \"axios-hooks\";\nimport {CheckBox} from \"@material-ui/icons\";\nimport {convertPinToStars} from '../helpers/helpers';\n\nconst ListAccounts = () => {\n\n    // GET request is the default.\n    const [{data, error, loading}] = useAxios(\"https://money-transfer-api-actse.herokuapp.com/api/account/list\")\n    //const [{data, error, loading}] = useAxios(\"http://localhost:8080/api/account/list\")\n\n    // the same as the above\n    // useAxios({\n    //     url: \"https://money-transfer-api-actse.herokuapp.com/api/account/list\",\n    //     method: 'GET'\n    // })\n\n    if (loading) {     // if (loading === true) {\n        return (\n            <Box sx={{display: 'flex'}}>\n                <CircularProgress/>\n            </Box>\n        );\n    }\n\n    if (error) return <p>The following error happened: {error.message}</p>\n\n    return (\n        <>\n            <h1>List of Accounts</h1>\n\n            <form>\n                <input type=\"text\"\n                   name=\"search\"\n                   placeholder=\"Search for account\"\n                   />\n                <button name=\"Search\" onClick={() => alert('searching ...')}>Search</button>\n            </form>\n\n            <TableContainer component={Paper}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>ID</TableCell>\n                            <TableCell>Name</TableCell>\n                            <TableCell>Phone number</TableCell>\n                            <TableCell>Email</TableCell>\n                            <TableCell>Pin</TableCell>\n                            <TableCell>Balance</TableCell>\n                            <TableCell>Is Verified?</TableCell>\n                        </TableRow>\n                    </TableHead>\n\n                    <TableBody>\n                        {data.map((row) => {\n                            return (\n                                <TableRow>\n                                    <TableCell>{row.id}</TableCell>\n                                    <TableCell>{row.firstName} {row.middleName} {row.lastName}</TableCell>\n                                    <TableCell>{row.phoneNumber}</TableCell>\n                                    <TableCell>{row.email}</TableCell>\n                                    <TableCell>{convertPinToStars(row.pin)}</TableCell>\n                                    <TableCell>{row.balance}</TableCell>\n                                    <TableCell><CheckBox checked={row.isVerified} /> {row.isVerified.toString()}</TableCell>\n                                </TableRow>\n                            )\n                        })\n                        }\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    );\n}\n\nexport default ListAccounts;\n","export const convertPinToStars = (pin) => {\n    return \"*\".repeat(pin.toString().length);\n}\n","import Header from './Header/Header'\nimport CreateAccount from './CreateAccount/CreateAccount'\nimport ListAccounts from \"./ListAccounts/ListAccounts\";\nimport {Route, Switch} from \"react-router-dom\";\n\nconst App = () => {\n    // <> </> is called a React Fragment\n    return (\n        <>\n            <Header/>\n            <Switch>\n                <Route\n                    exact\n                    path=\"/\"\n                    render={() => <CreateAccount />}/>\n\n                <Route\n                    exact\n                    path='/admin/listAccounts'\n                    render={() => <ListAccounts />} />\n            </Switch>\n        </>\n    );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createBrowserHistory} from 'history';\nimport {HashRouter} from \"react-router-dom\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n    <React.StrictMode>\n        {/* Use HashRouter instead of Router so that the app works when deployed to Github Pages */}\n        <HashRouter history={history}>\n            <App/>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}