{"version":3,"sources":["Header/Header.js","CreateAccount/CreateAccount.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","textField","margin","button","CreateAccount","useState","firstName","setFirstName","middleName","setMiddleName","lastName","setLastName","phoneNumber","setPhoneNumber","email","setEmail","dateOfBirth","setDateOfBirth","pin","setPin","confirmPin","setConfirmPin","isSubmitClicked","setIsSubmitClicked","useEffect","axios","post","then","response","console","log","data","alert","id","catch","error","TextField","type","autoFocus","label","placeholder","value","onChange","event","target","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c970c030.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nconst Header = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <AccountBalanceIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Money Transfer App\n                    </Typography>\n                    <Button color=\"inherit\">Show Profile</Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nexport default Header;\n","import React, {useState, useEffect} from 'react';\n//import TextField from '@material-ui/core/TextField';\n//import Button from '@material-ui/core/Button';\n\n// preferred approach\nimport {TextField, Button} from '@material-ui/core';\n\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport axios from 'axios';\n\nconst useStyles = makeStyles(() => ({\n    textField: {\n        margin: 20\n    },\n    button: {\n        margin: 25\n    }\n}));\n\nconst CreateAccount = () => {\n\n    const classes = useStyles();\n\n    const [firstName, setFirstName] = useState('');\n    const [middleName, setMiddleName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [email, setEmail] = useState('');\n    const [dateOfBirth, setDateOfBirth] = useState('01/01/1990');\n    const [pin, setPin] = useState();\n    const [confirmPin, setConfirmPin] = useState();\n\n    const [isSubmitClicked, setIsSubmitClicked] = useState(false);\n\n    useEffect(() => {\n\n        if (isSubmitClicked === true) {\n            if (pin === confirmPin) {\n                // axios.post(\"http://localhost:8080/api/account/create\",\n                axios.post(\"https://money-transfer-api-actse.herokuapp.com/api/account/create\",\n                    {\n                        \"firstName\": firstName,\n                        \"middleName\": middleName,\n                        \"lastName\": lastName,\n                        \"phoneNumber\": phoneNumber,\n                        \"email\": email,\n                        \"pin\": pin,\n                        \"dateOfBirth\": dateOfBirth\n                    }\n                )\n                    .then((response) => {\n                            console.log(response.data);\n                            alert(\"Account is created with id: \" + response.data.id);\n                        }\n                    )\n                    .catch((error) => {\n                        console.log(error);\n                        //alert(error.error);\n                    })\n                setIsSubmitClicked(false);\n            } else {\n                alert(\"Pin and confirmed pin are not the same!\");\n                setIsSubmitClicked(false);\n            }\n        }\n    }, [firstName, middleName, lastName, phoneNumber, email, pin, confirmPin, dateOfBirth, isSubmitClicked]);\n\n    return (\n        <form>\n            <TextField\n                type={\"text\"}\n                autoFocus={true}\n                className={classes.textField}\n                label={\"First Name\"}\n                placeholder={\"First Name\"}\n                variant={\"outlined\"}\n                value={firstName}\n                onChange={(event) =>\n                    setFirstName(event.target.value)}\n            />\n\n            <TextField\n                type={\"text\"}\n                className={classes.textField}\n                label={\"Middle Name\"}\n                placeholder={\"Middle Name\"}\n                variant={\"outlined\"}\n                value={middleName}\n                onChange={(event) =>\n                    setMiddleName(event.target.value)}\n            />\n\n            <TextField\n                type={\"text\"}\n                className={classes.textField}\n                label={\"Last Name\"}\n                placeholder={\"Last Name\"}\n                variant={\"outlined\"}\n                value={lastName}\n                onChange={(event) =>\n                    setLastName(event.target.value)}\n            />\n\n            <TextField\n                type={\"tel\"}\n                className={classes.textField}\n                label={\"Phone Number\"}\n                placeholder={\"Phone Number\"}\n                variant={\"outlined\"}\n                value={phoneNumber}\n                onChange={(event) =>\n                    setPhoneNumber(event.target.value)}\n            />\n\n            <TextField\n                type={\"email\"}\n                className={classes.textField}\n                label={\"Email\"}\n                placeholder={\"Email\"}\n                variant={\"outlined\"}\n                value={email}\n                onChange={(event) =>\n                    setEmail(event.target.value)}\n            />\n\n            <TextField\n                type={\"date\"}\n                className={classes.textField}\n                //label={\"Date of Birth\"}\n                placeholder={\"Date of Birth\"}\n                variant={\"outlined\"}\n                value={dateOfBirth}\n                onChange={(event) =>\n                    setDateOfBirth(event.target.value)}\n            />\n\n            <TextField\n                type={\"number\"}\n                className={classes.textField}\n                label={\"Pin\"}\n                placeholder={\"Pin\"}\n                variant={\"outlined\"}\n                value={pin}\n                onChange={(event) =>\n                    setPin(event.target.value)}\n            />\n\n            <TextField\n                type={\"number\"}\n                className={classes.textField}\n                label={\"Confirm Pin\"}\n                placeholder={\"Confirm Pin\"}\n                variant={\"outlined\"}\n                value={confirmPin}\n                onChange={(event) =>\n                    setConfirmPin(event.target.value)}\n            />\n\n            <Button\n                className={classes.button}\n                variant={\"contained\"}\n                color={\"Primary\"}\n                onClick={() => setIsSubmitClicked(true)}\n            >\n                Create Account\n            </Button>\n        </form>\n    );\n}\n\nexport default CreateAccount;\n","import Header from './Header/Header'\nimport CreateAccount from './CreateAccount/CreateAccount'\n\nconst App = () => {\n    // <> </> is called a React Fragment\n    return (\n        <>\n            <Header/>\n            <CreateAccount/>\n        </>\n    );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}